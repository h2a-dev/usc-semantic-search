[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "usc-mcp"
version = "0.1.0"
description = "USC Semantic Search MCP Server - AI-powered search for United States Code"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "USC MCP Team"},
]
keywords = ["usc", "legal", "search", "mcp", "ai", "embeddings", "voyageai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Legal Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Legal",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "fastmcp>=0.1.0",
    "voyageai>=0.2.0",
    "chromadb>=0.4.0",
    "python-dotenv>=1.0.0",
    "lxml>=4.9.0",
    "beautifulsoup4>=4.12.0",
    "httpx>=0.25.0",
    "aiofiles>=23.0.0",
    "tenacity>=8.2.0",
    "numpy>=1.24.0",
    "tiktoken>=0.5.0",
    "tqdm>=4.66.0",
    "pydantic>=2.0.0",
    "click>=8.1.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]

[project.scripts]
usc-download = "scripts.download_usc:main"
usc-process = "scripts.process_usc:main"
usc-server = "usc_mcp.server:main"
usc-test = "scripts.test_server:main"

[project.urls]
Homepage = "https://github.com/h2a-dev/usc-semantic-search"
Documentation = "https://github.com/h2a-dev/usc-semantic-search/blob/main/README.md"
Repository = "https://github.com/h2a-dev/usc-semantic-search"
Issues = "https://github.com/h2a-dev/usc-semantic-search/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["usc_mcp*", "scripts*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
usc_mcp = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["."]

[tool.coverage.run]
source = ["usc_mcp"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]